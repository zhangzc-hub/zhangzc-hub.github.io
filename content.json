{"meta":{"title":"ZC程序员","subtitle":"解码技术与生活的奥秘","description":"这里是 ZC 的技术博客，一名热爱编程的程序员，分享技术心得和个人生活感悟。让我们一起在代码的海洋中遨游，感受技术与生活的美妙交响。","author":"ZZC","url":"http://example.com","root":"/"},"pages":[{"title":"所有分类","date":"2024-11-25T11:23:05.900Z","updated":"2024-11-25T02:47:34.388Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2024-11-25T11:23:14.823Z","updated":"2024-11-25T02:47:34.388Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"我的朋友们","date":"2024-11-25T11:22:55.110Z","updated":"2024-11-25T02:47:34.388Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有标签","date":"2024-11-25T11:22:46.949Z","updated":"2024-11-25T02:47:34.388Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo搭建博客","slug":"博客制作","date":"2024-11-25T10:48:45.000Z","updated":"2024-11-25T12:17:32.718Z","comments":true,"path":"2024/11/25/博客制作/","permalink":"http://example.com/2024/11/25/%E5%8D%9A%E5%AE%A2%E5%88%B6%E4%BD%9C/","excerpt":"","text":"hexo搭建博客第一部分Hexo简介Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。 Hexo搭建步骤 安装Git 安装Node.js 安装Hexo GitHub创建个人仓库 生成SSH添加到GitHub 将hexo部署到GitHub 设置个人域名 发布文章 1. 安装GitGit是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。 Windows：到git官网上下载,Download git,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。 Linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码 1sudo apt-get install git 安装好后，用git --version 来查看一下版本 2. 安装nodejsHexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。 windows：nodejs选择LTS版本就行了。 linux： 12sudo apt-get install nodejssudo apt-get install npm 安装完后，打开命令行 12node -vnpm -v 检查一下有没有安装成功 顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。 3. 安装hexo前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。 输入命令 1npm install -g hexo-cli 依旧用hexo -v查看一下版本 至此就全部安装完了。 接下来初始化一下hexo 1hexo init myblog 这个myblog可以自己取什么名字都行，然后 12cd myblog //进入这个myblog文件夹npm install 新建完成后，指定文件夹目录下有： node_modules: 依赖包 public：存放生成的页面 scaffolds：生成文章的一些模板 source：用来存放你的文章 themes：主题 ** _config.yml: 博客的配置文件** 12hexo ghexo server 打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。 使用ctrl+c可以把服务关掉。 4. GitHub创建个人仓库首先，你先要有一个GitHub账户，去注册一个吧。 注册完登录后，在GitHub.com中看到一个New repository，新建仓库 创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名。 点击create repository。 5. 生成SSH添加到GitHub回到你的git bash中， 12git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot; 这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。 12git config user.namegit config user.email 然后创建SSH,一路回车 1ssh-keygen -t rsa -C &quot;youremail&quot; 这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。 ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上 而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key把你的id_rsa.pub里面的信息复制进去。 在gitbash中，查看是否成功 1ssh -T git@github.com 6. 将hexo部署到GitHub这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上，打开站点配置文件 _config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户 1234deploy: type: git repo: https://github.com/YourgithubName/YourgithubName.github.io.git branch: master 这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。 1npm install hexo-deployer-git --save 然后 123hexo cleanhexo generatehexo deploy 其中 hexo clean清除了你之前生成的东西，也可以不加。hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写hexo deploy 部署文章，可以用hexo d缩写 注意deploy时可能要你输入username和password。 得到下图就说明部署成功了，过一会儿就可以在http://yourname.github.io 这个网站看到你的博客了！！ 接下来你就可以正式开始写文章了。 1hexo new newpapername 然后在source&#x2F;_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再 123hexo cleanhexo ghexo d 就可以看到更新了。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/categories/hexo/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-11-24T10:48:45.000Z","updated":"2024-11-25T11:15:42.989Z","comments":true,"path":"2024/11/24/hello-world/","permalink":"http://example.com/2024/11/24/hello-world/","excerpt":"","text":"Hello World: 第一步，从这里开始​ 大家好，我是ZC，一名热衷于探索技术世界的程序员。今天，我怀着激动的心情写下我的第一篇博客。为什么选择“Hello World”作为开篇呢？这不仅仅是因为它几乎是每个程序员学习编程语言时的第一个程序，更因为它象征着我们与计算机世界的初次对话——简单、纯粹且充满无限可能。 编程之路的起点​ 回想起自己第一次在屏幕上敲出“Hello World”的那一刻，那种成就感至今仍然记忆犹新。那时的我对编程充满了好奇与敬畏，不知道接下来的学习之旅将会遇到什么样的挑战。随着时间的推移，我逐渐意识到，每一次代码的编写都是一次创造的过程，而每一个BUG的解决则像是一次小小的胜利。在这个过程中，我学会了如何用逻辑思考问题，如何将复杂的任务分解成可管理的部分，更重要的是，我学会了坚持不懈。 技术分享的意义​ 创建这个博客的目的，不仅仅是记录下我个人的技术成长历程，更是希望能够成为一个交流的平台。在这里，无论是初学者还是经验丰富的开发者，都可以找到有价值的信息，相互启发，共同进步。我相信，通过分享我们的知识、经验和见解，可以激发更多人的创造力，推动整个社区向前发展。 未来的展望​ 展望未来，我希望能够在这个博客上分享更多关于编程技巧、项目开发经验以及对最新技术趋势的思考。同时，我也期待着能够听到读者们的声音，无论是建议、批评还是鼓励，都是我不断前进的动力。让我们一起在这个数字世界中探索未知，创造价值。 ​ 最后，再次感谢您花时间阅读我的第一篇博客。如果您对编程有任何疑问或兴趣，欢迎随时留言交流。希望我们都能在技术的道路上越走越远，直到有一天，我们可以自豪地说：“Look what we’ve built!”","categories":[{"name":"Hello World","slug":"Hello-World","permalink":"http://example.com/categories/Hello-World/"}],"tags":[{"name":"Hello World","slug":"Hello-World","permalink":"http://example.com/tags/Hello-World/"}]},{"title":"我的第一篇文章","slug":"我的第一篇文章","date":"2024-07-28T13:07:55.000Z","updated":"2024-11-25T02:47:34.388Z","comments":true,"path":"2024/07/28/我的第一篇文章/","permalink":"http://example.com/2024/07/28/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","excerpt":"","text":"标题第一篇文章 java开发 12345678parallax: enable: true position: fixed # cover: sticky on the cover. fixed: Fixed as background for the site. shuffle: true # shuffle playlist duration: 10000 # Duration (ms) fade: 1500 # fade duration (ms) (Not more than 1500) images: # For personal use only. At your own risk if used for commercial purposes !!! - https://raw.githubusercontent.com/zhangzc-hub/img/main/img/13.webp","categories":[{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"标签1","slug":"标签1","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE1/"},{"name":"标签2","slug":"标签2","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE2/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/categories/hexo/"},{"name":"Hello World","slug":"Hello-World","permalink":"http://example.com/categories/Hello-World/"},{"name":"Java","slug":"Java","permalink":"http://example.com/categories/Java/"}],"tags":[{"name":"博客","slug":"博客","permalink":"http://example.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"Hello World","slug":"Hello-World","permalink":"http://example.com/tags/Hello-World/"},{"name":"标签1","slug":"标签1","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE1/"},{"name":"标签2","slug":"标签2","permalink":"http://example.com/tags/%E6%A0%87%E7%AD%BE2/"}]}